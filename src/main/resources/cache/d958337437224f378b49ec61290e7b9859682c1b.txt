{"sha":"d958337437224f378b49ec61290e7b9859682c1b","commit":{"url":"https://api.github.com/repos/jcacosta25/MovieDBApp/git/commits/d958337437224f378b49ec61290e7b9859682c1b","message":"[movie-provider]\u003cconfig\u003e: change moshi to gson"},"url":"https://api.github.com/repos/jcacosta25/MovieDBApp/commits/d958337437224f378b49ec61290e7b9859682c1b","files":[{"sha":"2cb5ea623990538e54c856dfe755a9609c50354d","filename":"app/build.gradle.kts","status":"modified","additions":1,"changes":2,"patch":"@@ -17,6 +17,7 @@ android {\n         versionCode \u003d Android.versionCode\n         versionName \u003d Android.versionName\n         testInstrumentationRunner \u003d \"androidx.test.runner.AndroidJUnitRunner\"\n+        buildConfigField(\"String\", \"ApiKey\", ApiKeys.movieDb)\n         vectorDrawables {\n             useSupportLibrary \u003d true\n         }\n@@ -86,7 +87,6 @@ dependencies {\n     implementation(Libs.navigationUi)\n     kapt(Libs.daggerCompiler)\n     kapt(Libs.daggerAndroidProcessor)\n-    kapt(Libs.moshiKotlinCodeGen)\n     testImplementation(TestLibs.jUnit)\n     androidTestImplementation(TestLibs.testRunner)\n     androidTestImplementation(TestLibs.espressoCore)"},{"sha":"02845022df5ea88e096c1efb5b366373eca63b06","filename":"movies_provider/build.gradle.kts","status":"modified","additions":3,"changes":7,"patch":"@@ -48,18 +48,17 @@ dependencies {\n     api(Libs.daggerAndroid)\n     api(Libs.daggerAndroidSupport)\n     api(Libs.threeTenABP)\n-    api(Libs.moshi)\n-    api(Libs.moshiKotlin)\n+    api(Libs.gson)\n     api(Libs.okHttpProfiler)\n     api(Libs.appCompat)\n     api(Libs.retrofit)\n-    api(Libs.retrofitConverterMoshi)\n+    api(Libs.retrofitConverterGson)\n     api(Libs.okHttp)\n     api(Libs.okHttpInterceptor)\n     api(Libs.archRoomTime)\n-    kapt(Libs.moshiKotlinCodeGen)\n     kapt(Libs.daggerAndroidProcessor)\n     kapt(Libs.daggerCompiler)\n+    kapt(Libs.roomCompiler)\n     testImplementation(TestLibs.jUnit)\n     testImplementation(TestLibs.roomTesting)\n     testImplementation(TestLibs.lifeCycleTest)"},{"sha":"8d8546d995a9aa5e08716b038c339a2324b69612","filename":"movies_provider/src/main/kotlin/io/jcal/movies_provider/di/NetworkModule.kt","status":"modified","additions":8,"changes":23,"patch":"@@ -1,6 +1,7 @@\n package io.jcal.movies_provider.di\n \n-import com.squareup.moshi.Moshi\n+import com.google.gson.Gson\n+import com.google.gson.GsonBuilder\n import dagger.Module\n import dagger.Provides\n import io.jcal.movies_provider.BuildConfig\n@@ -12,42 +13,35 @@ import okhttp3.HttpUrl\n import okhttp3.OkHttpClient\n import retrofit2.Converter\n import retrofit2.Retrofit\n-import retrofit2.converter.moshi.MoshiConverterFactory\n+import retrofit2.converter.gson.GsonConverterFactory\n import javax.inject.Named\n-import javax.inject.Singleton\n \n @Module\n class NetworkModule {\n \n     @Provides\n-    @Singleton\n     fun providesHttpUrl(): HttpUrl \u003d ServiceFactory.providesHttpUrl()\n \n     @Provides\n-    @Singleton\n     fun providesTokenInterceptor(@Named(API_TOKEN_PROPERTY) apiToken: String \u003d BuildConfig.ApiKey): AuthTokenInterceptor \u003d\n         AuthTokenInterceptor(apiToken)\n \n     @Provides\n-    @Singleton\n-    @Named(MOSHI_PROPERTY)\n-    fun provideMoshi(): Moshi \u003d Moshi.Builder().build()\n+    @Named(GSON_PROPERTY)\n+    fun provideGson(): Gson \u003d GsonBuilder().create()\n \n \n     @Provides\n-    @Singleton\n-    fun provideJsonConverterFactory(@Named(MOSHI_PROPERTY) moshi: Moshi): Converter.Factory \u003d\n-        MoshiConverterFactory.create(moshi)\n+    fun provideJsonConverterFactory(@Named(GSON_PROPERTY) gson: Gson): Converter.Factory \u003d\n+        GsonConverterFactory.create(gson)\n \n \n     @Provides\n-    @Singleton\n     fun providesHttpClient(tokenInterceptor: AuthTokenInterceptor): OkHttpClient \u003d\n         ServiceFactory.buildOkHttpClient(tokenInterceptor)\n \n \n     @Provides\n-    @Singleton\n     fun provideRetrofit(\n         url: HttpUrl,\n         client: OkHttpClient,\n@@ -56,12 +50,11 @@ class NetworkModule {\n     ): Retrofit \u003d ServiceFactory.buildRetrofit(url, client, converter, liveDataCallAdapterFactory)\n \n     @Provides\n-    @Singleton\n     fun provideMovieDbService(retrofit: Retrofit): MovieDBService \u003d\n         retrofit.create(MovieDBService::class.java)\n \n     companion object {\n         const val API_TOKEN_PROPERTY \u003d \"api_token\"\n-        const val MOSHI_PROPERTY \u003d \"retrofit_moshi\"\n+        const val GSON_PROPERTY \u003d \"retrofit_gson\"\n     }\n }\n\\ No newline at end of file"},{"sha":"3242882d390cf965017fe95cc7b8aca9209c2621","filename":"movies_provider/src/main/kotlin/io/jcal/movies_provider/di/RepositoryModule.kt","status":"modified","additions":0,"changes":5,"patch":"@@ -12,25 +12,20 @@ import io.jcal.movies_provider.repository.datasource.CloudDataSourceImpl\n import io.jcal.movies_provider.repository.datasource.DiskDataSource\n import io.jcal.movies_provider.repository.datasource.DiskDataSourceImpl\n import io.jcal.movies_provider.repository.db.MovieDBDataBase\n-import javax.inject.Singleton\n \n @Module\n class RepositoryModule {\n \n     @Provides\n-    @Singleton\n     fun providesDiskDataSource(dataBase: MovieDBDataBase): DiskDataSource \u003d\n         DiskDataSourceImpl(dataBase)\n \n     @Provides\n-    @Singleton\n     fun provideCloudDataSource(api: MovieDBService): CloudDataSource \u003d CloudDataSourceImpl(api)\n \n     @Provides\n-    @Singleton\n     fun provideNetworkUtils(context: Context): NetworkUtil \u003d NetworkUtil(context)\n \n     @Provides\n-    @Singleton\n     fun provideRepository(repository: RepositoryImpl): Repository \u003d repository\n }\n\\ No newline at end of file"},{"sha":"48d29a25deea80e7d6641d6183ded538f425f14f","filename":"movies_provider/src/main/kotlin/io/jcal/movies_provider/di/StorageModule.kt","status":"modified","additions":0,"changes":2,"patch":"@@ -8,13 +8,11 @@ import io.jcal.movies_provider.repository.db.DatabaseConstants.DATABASE_NAME\n import io.jcal.movies_provider.repository.db.DatabaseConstants.DATABASE_NAME_PROPERTY\n import io.jcal.movies_provider.repository.db.MovieDBDataBase\n import javax.inject.Named\n-import javax.inject.Singleton\n \n @Module\n class StorageModule {\n \n     @Provides\n-    @Singleton\n     fun providesDatabase(context: Context, @Named(DATABASE_NAME_PROPERTY) databaseName: String \u003d DATABASE_NAME): MovieDBDataBase \u003d\n         Room.databaseBuilder(context, MovieDBDataBase::class.java, databaseName).build()\n "},{"sha":"4670e2c829fcb715500b1eb6bcfb850cea46dfc8","filename":"movies_provider/src/main/kotlin/io/jcal/movies_provider/repository/api/MovieDBService.kt","status":"modified","additions":2,"changes":4,"patch":"@@ -9,13 +9,13 @@ import retrofit2.http.Query\n \n interface MovieDBService {\n \n-    @GET(\"/movie/popular\")\n+    @GET(\"/3/movie/popular\")\n     fun getPopularMovies(\n         @Query(\"language\") language: String,\n         @Query(\"page\") page: Int\n     ): LiveData\u003cApiResponse\u003cMoviesDTO, MoviesDTO\u003e\u003e\n \n-    @GET(\"/tv/popular\")\n+    @GET(\"/3/tv/popular\")\n     fun getPopularTvShows(\n         @Query(\"language\") language: String,\n         @Query(\"page\") page: Int"},{"sha":"4c1af25d1a70eb1c995f96381a65bacd1fef44e2","filename":"movies_provider/src/main/kotlin/io/jcal/movies_provider/repository/api/factory/ServiceFactory.kt","status":"modified","additions":1,"changes":2,"patch":"@@ -48,5 +48,5 @@ object ServiceFactory {\n     private const val MAX_READ_TIME_OUT_SECONDS \u003d 60L\n     private const val MAX_CONNECTION_TIME_OUT_SECONDS \u003d 60L\n     private const val SCHEME \u003d \"https\"\n-    private const val HOST \u003d \"api.themoviedb.org/3/\"\n+    private const val HOST \u003d \"api.themoviedb.org\"\n }\n\\ No newline at end of file"},{"sha":"d5d4a785554c49de060846fa405849e8ea08d5f9","filename":"movies_provider/src/main/kotlin/io/jcal/movies_provider/repository/api/model/FlicksModel.kt","status":"modified","additions":138,"changes":276,"patch":"@@ -1,325 +1,325 @@\n package io.jcal.movies_provider.repository.api.model\n \n-import com.squareup.moshi.Json\n+import com.google.gson.annotations.SerializedName\n \n data class TvShowsDTO(\n-    @Json(name \u003d \"dates\")\n+    @SerializedName(value \u003d \"dates\")\n     val dates: DatesDTO,\n-    @Json(name \u003d \"page\")\n+    @SerializedName(\"page\")\n     val page: Int,\n-    @Json(name \u003d \"results\")\n+    @SerializedName(value \u003d \"results\")\n     val results: List\u003cTvShowDTO\u003e,\n-    @Json(name \u003d \"total_pages\")\n+    @SerializedName(value \u003d \"total_pages\")\n     val totalPages: Int,\n-    @Json(name \u003d \"total_results\")\n+    @SerializedName(value \u003d \"total_results\")\n     val totalResults: Int\n )\n \n data class DatesDTO(\n-    @Json(name \u003d \"maximum\")\n+    @SerializedName(value \u003d \"maximum\")\n     val maximum: String,\n-    @Json(name \u003d \"minimum\")\n+    @SerializedName(value \u003d \"minimum\")\n     val minimum: String\n )\n \n data class MoviesDTO(\n-    @Json(name \u003d \"dates\")\n+    @SerializedName(value \u003d \"dates\")\n     val dates: DatesDTO,\n-    @Json(name \u003d \"page\")\n+    @SerializedName(value \u003d \"page\")\n     val page: Int,\n-    @Json(name \u003d \"results\")\n+    @SerializedName(value \u003d \"results\")\n     val results: List\u003cMovieDTO\u003e,\n-    @Json(name \u003d \"total_pages\")\n+    @SerializedName(value \u003d \"total_pages\")\n     val totalPages: Int,\n-    @Json(name \u003d \"total_results\")\n+    @SerializedName(value \u003d \"total_results\")\n     val totalResults: Int\n )\n \n data class MovieDTO(\n-    @Json(name \u003d \"id\")\n+    @SerializedName(value \u003d \"id\")\n     val id: Int,\n-    @Json(name \u003d \"adult\")\n+    @SerializedName(value \u003d \"adult\")\n     val adult: Boolean,\n-    @Json(name \u003d \"backdrop_path\")\n+    @SerializedName(value \u003d \"backdrop_path\")\n     val backdropPath: String,\n-    @Json(name \u003d \"belongs_to_collection\")\n+    @SerializedName(value \u003d \"belongs_to_collection\")\n     val belongsToCollection: Any,\n-    @Json(name \u003d \"budget\")\n+    @SerializedName(value \u003d \"budget\")\n     val budget: Int,\n-    @Json(name \u003d \"genres\")\n+    @SerializedName(value \u003d \"genres\")\n     val genres: List\u003cGenreDTO\u003e,\n-    @Json(name \u003d \"genre_ids\")\n+    @SerializedName(value \u003d \"genre_ids\")\n     val genreIds: List\u003cInt\u003e,\n-    @Json(name \u003d \"homepage\")\n+    @SerializedName(value \u003d \"homepage\")\n     val homepage: String,\n-    @Json(name \u003d \"imdb_id\")\n+    @SerializedName(value \u003d \"imdb_id\")\n     val imdbId: String,\n-    @Json(name \u003d \"original_language\")\n+    @SerializedName(value \u003d \"original_language\")\n     val originalLanguage: String,\n-    @Json(name \u003d \"original_title\")\n+    @SerializedName(value \u003d \"original_title\")\n     val originalTitle: String,\n-    @Json(name \u003d \"overview\")\n+    @SerializedName(value \u003d \"overview\")\n     val overview: String,\n-    @Json(name \u003d \"popularity\")\n+    @SerializedName(value \u003d \"popularity\")\n     val popularity: Double,\n-    @Json(name \u003d \"poster_path\")\n+    @SerializedName(value \u003d \"poster_path\")\n     val posterPath: String,\n-    @Json(name \u003d \"production_companies\")\n+    @SerializedName(value \u003d \"production_companies\")\n     val productionCompanyModels: List\u003cProductionCompanyDTO\u003e,\n-    @Json(name \u003d \"production_countries\")\n+    @SerializedName(value \u003d \"production_countries\")\n     val productionCountryModels: List\u003cProductionCountryDTO\u003e,\n-    @Json(name \u003d \"release_date\")\n+    @SerializedName(value \u003d \"release_date\")\n     val releaseDate: String,\n-    @Json(name \u003d \"revenue\")\n+    @SerializedName(value \u003d \"revenue\")\n     val revenue: Int,\n-    @Json(name \u003d \"runtime\")\n+    @SerializedName(value \u003d \"runtime\")\n     val runtime: Int,\n-    @Json(name \u003d \"spoken_languages\")\n+    @SerializedName(value \u003d \"spoken_languages\")\n     val spokenLanguageModels: List\u003cSpokenLanguageDTO\u003e,\n-    @Json(name \u003d \"status\")\n+    @SerializedName(value \u003d \"status\")\n     val status: String,\n-    @Json(name \u003d \"tagline\")\n+    @SerializedName(value \u003d \"tagline\")\n     val tagline: String,\n-    @Json(name \u003d \"title\")\n+    @SerializedName(value \u003d \"title\")\n     val title: String,\n-    @Json(name \u003d \"video\")\n+    @SerializedName(value \u003d \"video\")\n     val video: Boolean,\n-    @Json(name \u003d \"vote_average\")\n+    @SerializedName(value \u003d \"vote_average\")\n     val voteAverage: Double,\n-    @Json(name \u003d \"vote_count\")\n+    @SerializedName(value \u003d \"vote_count\")\n     val voteCount: Int\n )\n \n data class SpokenLanguageDTO(\n-    @Json(name \u003d \"iso_639_1\")\n+    @SerializedName(value \u003d \"iso_639_1\")\n     val iso6391: String,\n-    @Json(name \u003d \"name\")\n+    @SerializedName(value \u003d \"name\")\n     val name: String\n )\n \n data class GenreDTO(\n-    @Json(name \u003d \"id\")\n+    @SerializedName(value \u003d \"id\")\n     val id: Int,\n-    @Json(name \u003d \"name\")\n+    @SerializedName(value \u003d \"name\")\n     val name: String\n )\n \n data class ProductionCompanyDTO(\n-    @Json(name \u003d \"id\")\n+    @SerializedName(value \u003d \"id\")\n     val id: Int,\n-    @Json(name \u003d \"logo_path\")\n+    @SerializedName(value \u003d \"logo_path\")\n     val logoPath: String,\n-    @Json(name \u003d \"name\")\n+    @SerializedName(value \u003d \"name\")\n     val name: String,\n-    @Json(name \u003d \"origin_country\")\n+    @SerializedName(value \u003d \"origin_country\")\n     val originCountry: String\n )\n \n data class ProductionCountryDTO(\n-    @Json(name \u003d \"iso_3166_1\")\n+    @SerializedName(value \u003d \"iso_3166_1\")\n     val iso31661: String,\n-    @Json(name \u003d \"name\")\n+    @SerializedName(value \u003d \"name\")\n     val name: String\n )\n \n data class TvShowDTO(\n-    @Json(name \u003d \"id\")\n+    @SerializedName(value \u003d \"id\")\n     val id: Int,\n-    @Json(name \u003d \"air_date\")\n+    @SerializedName(value \u003d \"air_date\")\n     val airDate: String,\n-    @Json(name \u003d \"episode_count\")\n+    @SerializedName(value \u003d \"episode_count\")\n     val episodeCount: Int,\n-    @Json(name \u003d \"season_number\")\n+    @SerializedName(value \u003d \"season_number\")\n     val seasonNumber: Int,\n-    @Json(name \u003d \"backdrop_path\")\n+    @SerializedName(value \u003d \"backdrop_path\")\n     val backdropPath: String,\n-    @Json(name \u003d \"created_by\")\n+    @SerializedName(value \u003d \"created_by\")\n     val createdBy: List\u003cCreatorDTO\u003e,\n-    @Json(name \u003d \"episode_run_time\")\n+    @SerializedName(value \u003d \"episode_run_time\")\n     val episodeRunTime: List\u003cInt\u003e,\n-    @Json(name \u003d \"first_air_date\")\n+    @SerializedName(value \u003d \"first_air_date\")\n     val firstAirDate: String,\n-    @Json(name \u003d \"genres\")\n+    @SerializedName(value \u003d \"genres\")\n     val genres: List\u003cGenreDTO\u003e,\n-    @Json(name \u003d \"homepage\")\n+    @SerializedName(value \u003d \"homepage\")\n     val homepage: String,\n-    @Json(name \u003d \"in_production\")\n+    @SerializedName(value \u003d \"in_production\")\n     val inProduction: Boolean,\n-    @Json(name \u003d \"languages\")\n+    @SerializedName(value \u003d \"languages\")\n     val languages: List\u003cString\u003e,\n-    @Json(name \u003d \"last_air_date\")\n+    @SerializedName(value \u003d \"last_air_date\")\n     val lastAirDate: String,\n-    @Json(name \u003d \"last_episode_to_air\")\n+    @SerializedName(value \u003d \"last_episode_to_air\")\n     val lastEpisodeToAir: EpisodeDTO,\n-    @Json(name \u003d \"name\")\n+    @SerializedName(value \u003d \"name\")\n     val name: String,\n-    @Json(name \u003d \"networks\")\n+    @SerializedName(value \u003d \"networks\")\n     val networks: List\u003cTvNetworkDTO\u003e,\n-    @Json(name \u003d \"next_episode_to_air\")\n+    @SerializedName(value \u003d \"next_episode_to_air\")\n     val nextEpisodeToAir: EpisodeDTO,\n-    @Json(name \u003d \"number_of_episodes\")\n+    @SerializedName(value \u003d \"number_of_episodes\")\n     val numberOfEpisodes: Int,\n-    @Json(name \u003d \"number_of_seasons\")\n+    @SerializedName(value \u003d \"number_of_seasons\")\n     val numberOfSeasons: Int,\n-    @Json(name \u003d \"origin_country\")\n+    @SerializedName(value \u003d \"origin_country\")\n     val originCountry: List\u003cString\u003e,\n-    @Json(name \u003d \"original_language\")\n+    @SerializedName(value \u003d \"original_language\")\n     val originalLanguage: String,\n-    @Json(name \u003d \"original_name\")\n+    @SerializedName(value \u003d \"original_name\")\n     val originalName: String,\n-    @Json(name \u003d \"overview\")\n+    @SerializedName(value \u003d \"overview\")\n     val overview: String,\n-    @Json(name \u003d \"popularity\")\n+    @SerializedName(value \u003d \"popularity\")\n     val popularity: Double,\n-    @Json(name \u003d \"poster_path\")\n+    @SerializedName(value \u003d \"poster_path\")\n     val posterPath: String,\n-    @Json(name \u003d \"production_companies\")\n+    @SerializedName(value \u003d \"production_companies\")\n     val productionCompanies: List\u003cProductionCompanyDTO\u003e,\n-    @Json(name \u003d \"seasons\")\n+    @SerializedName(value \u003d \"seasons\")\n     val seasons: List\u003cSeasonDTO\u003e,\n-    @Json(name \u003d \"status\")\n+    @SerializedName(value \u003d \"status\")\n     val status: String,\n-    @Json(name \u003d \"type\")\n+    @SerializedName(value \u003d \"type\")\n     val type: String,\n-    @Json(name \u003d \"vote_average\")\n+    @SerializedName(value \u003d \"vote_average\")\n     val voteAverage: Double,\n-    @Json(name \u003d \"vote_count\")\n+    @SerializedName(value \u003d \"vote_count\")\n     val voteCount: Int,\n-    @Json(name \u003d \"genre_ids\")\n+    @SerializedName(value \u003d \"genre_ids\")\n     val genreIds: List\u003cInt\u003e\n )\n \n data class SeasonDTO(\n-    @Json(name \u003d \"id\")\n+    @SerializedName(value \u003d \"id\")\n     val id: Int,\n-    @Json(name \u003d \"_id\")\n+    @SerializedName(value \u003d \"_id\")\n     val _id: String,\n-    @Json(name \u003d \"air_date\")\n+    @SerializedName(value \u003d \"air_date\")\n     val airDate: String,\n-    @Json(name \u003d \"episode_count\")\n+    @SerializedName(value \u003d \"episode_count\")\n     val episodeCount: Int,\n-    @Json(name \u003d \"name\")\n+    @SerializedName(value \u003d \"name\")\n     val name: String,\n-    @Json(name \u003d \"overview\")\n+    @SerializedName(value \u003d \"overview\")\n     val overview: String,\n-    @Json(name \u003d \"poster_path\")\n+    @SerializedName(value \u003d \"poster_path\")\n     val posterPath: String,\n-    @Json(name \u003d \"season_number\")\n+    @SerializedName(value \u003d \"season_number\")\n     val seasonNumber: Int,\n-    @Json(name \u003d \"episodes\")\n+    @SerializedName(value \u003d \"episodes\")\n     val episodes: List\u003cEpisodeDTO\u003e\n )\n \n data class EpisodeDTO(\n-    @Json(name \u003d \"id\")\n+    @SerializedName(value \u003d \"id\")\n     val id: Int,\n-    @Json(name \u003d \"air_date\")\n+    @SerializedName(value \u003d \"air_date\")\n     val airDate: String,\n-    @Json(name \u003d \"episode_number\")\n+    @SerializedName(value \u003d \"episode_number\")\n     val episodeNumber: Int,\n-    @Json(name \u003d \"name\")\n+    @SerializedName(value \u003d \"name\")\n     val name: String,\n-    @Json(name \u003d \"overview\")\n+    @SerializedName(value \u003d \"overview\")\n     val overview: String,\n-    @Json(name \u003d \"production_code\")\n+    @SerializedName(value \u003d \"production_code\")\n     val productionCode: String,\n-    @Json(name \u003d \"season_number\")\n+    @SerializedName(value \u003d \"season_number\")\n     val seasonNumber: Int,\n-    @Json(name \u003d \"show_id\")\n+    @SerializedName(value \u003d \"show_id\")\n     val showId: Int,\n-    @Json(name \u003d \"still_path\")\n+    @SerializedName(value \u003d \"still_path\")\n     val stillPath: Any,\n-    @Json(name \u003d \"vote_average\")\n+    @SerializedName(value \u003d \"vote_average\")\n     val voteAverage: Int,\n-    @Json(name \u003d \"vote_count\")\n+    @SerializedName(value \u003d \"vote_count\")\n     val voteCount: Int,\n-    @Json(name \u003d \"crew\")\n+    @SerializedName(value \u003d \"crew\")\n     val crew: List\u003cCrewDTO\u003e,\n-    @Json(name \u003d \"guest_stars\")\n+    @SerializedName(value \u003d \"guest_stars\")\n     val guestStars: List\u003cGuestStarDTO\u003e\n )\n \n data class TvNetworkDTO(\n-    @Json(name \u003d \"id\")\n+    @SerializedName(value \u003d \"id\")\n     val id: Int,\n-    @Json(name \u003d \"logo_path\")\n+    @SerializedName(value \u003d \"logo_path\")\n     val logoPath: String,\n-    @Json(name \u003d \"name\")\n+    @SerializedName(value \u003d \"name\")\n     val name: String,\n-    @Json(name \u003d \"origin_country\")\n+    @SerializedName(value \u003d \"origin_country\")\n     val originCountry: String\n )\n \n data class CreatorDTO(\n-    @Json(name \u003d \"id\")\n+    @SerializedName(value \u003d \"id\")\n     val id: Int,\n-    @Json(name \u003d \"credit_id\")\n+    @SerializedName(value \u003d \"credit_id\")\n     val creditId: String,\n-    @Json(name \u003d \"gender\")\n+    @SerializedName(value \u003d \"gender\")\n     val gender: Int,\n-    @Json(name \u003d \"name\")\n+    @SerializedName(value \u003d \"name\")\n     val name: String,\n-    @Json(name \u003d \"profile_path\")\n+    @SerializedName(value \u003d \"profile_path\")\n     val profilePath: String\n )\n \n data class GuestStarDTO(\n-    @Json(name \u003d \"id\")\n+    @SerializedName(value \u003d \"id\")\n     val id: Int,\n-    @Json(name \u003d \"character\")\n+    @SerializedName(value \u003d \"character\")\n     val character: String,\n-    @Json(name \u003d \"credit_id\")\n+    @SerializedName(value \u003d \"credit_id\")\n     val creditId: String,\n-    @Json(name \u003d \"name\")\n+    @SerializedName(value \u003d \"name\")\n     val name: String,\n-    @Json(name \u003d \"order\")\n+    @SerializedName(value \u003d \"order\")\n     val order: Int,\n-    @Json(name \u003d \"profile_path\")\n+    @SerializedName(value \u003d \"profile_path\")\n     val profilePath: String\n )\n \n data class CrewDTO(\n-    @Json(name \u003d \"id\")\n+    @SerializedName(value \u003d \"id\")\n     val id: Int,\n-    @Json(name \u003d \"credit_id\")\n+    @SerializedName(value \u003d \"credit_id\")\n     val creditId: String,\n-    @Json(name \u003d \"department\")\n+    @SerializedName(value \u003d \"department\")\n     val department: String,\n-    @Json(name \u003d \"job\")\n+    @SerializedName(value \u003d \"job\")\n     val job: String,\n-    @Json(name \u003d \"name\")\n+    @SerializedName(value \u003d \"name\")\n     val name: String,\n-    @Json(name \u003d \"profile_path\")\n+    @SerializedName(value \u003d \"profile_path\")\n     val profilePath: String\n )\n \n data class PeopleDTO(\n-    @Json(name \u003d \"id\")\n+    @SerializedName(value \u003d \"id\")\n     val id: Int,\n-    @Json(name \u003d \"adult\")\n+    @SerializedName(value \u003d \"adult\")\n     val adult: Boolean,\n-    @Json(name \u003d \"also_known_as\")\n+    @SerializedName(value \u003d \"also_known_as\")\n     val alsoKnownAs: List\u003cString\u003e,\n-    @Json(name \u003d \"biography\")\n+    @SerializedName(value \u003d \"biography\")\n     val biography: String,\n-    @Json(name \u003d \"birthday\")\n+    @SerializedName(value \u003d \"birthday\")\n     val birthday: String,\n-    @Json(name \u003d \"deathday\")\n+    @SerializedName(value \u003d \"deathday\")\n     val deathday: Any,\n-    @Json(name \u003d \"gender\")\n+    @SerializedName(value \u003d \"gender\")\n     val gender: Int,\n-    @Json(name \u003d \"homepage\")\n+    @SerializedName(value \u003d \"homepage\")\n     val homepage: Any,\n-    @Json(name \u003d \"imdb_id\")\n+    @SerializedName(value \u003d \"imdb_id\")\n     val imdbId: String,\n-    @Json(name \u003d \"known_for_department\")\n+    @SerializedName(value \u003d \"known_for_department\")\n     val knownForDepartment: String,\n-    @Json(name \u003d \"name\")\n+    @SerializedName(value \u003d \"name\")\n     val name: String,\n-    @Json(name \u003d \"place_of_birth\")\n+    @SerializedName(value \u003d \"place_of_birth\")\n     val placeOfBirth: String,\n-    @Json(name \u003d \"popularity\")\n+    @SerializedName(value \u003d \"popularity\")\n     val popularity: Double,\n-    @Json(name \u003d \"profile_path\")\n+    @SerializedName(value \u003d \"profile_path\")\n     val profilePath: String\n )"},{"sha":"9972c1f60673ae86574bac94099aa32462e88498","filename":"movies_provider/src/main/kotlin/io/jcal/movies_provider/repository/db/converter/Converter.kt","status":"modified","additions":8,"changes":39,"patch":"@@ -1,50 +1,27 @@\n package io.jcal.movies_provider.repository.db.converter\n \n import androidx.room.TypeConverter\n-import com.squareup.moshi.Moshi\n-import com.squareup.moshi.Types\n-import com.squareup.moshi.kotlin.reflect.KotlinJsonAdapterFactory\n+import com.google.gson.Gson\n+import com.google.gson.reflect.TypeToken\n \n \n class Converter {\n \n     @TypeConverter\n-    fun stringListToJson(value: List\u003cString\u003e?): String {\n-        val moshi \u003d Moshi.Builder()\n-            .add(KotlinJsonAdapterFactory())\n-            .build()\n-        val type \u003d Types.newParameterizedType(List::class.java, String::class.java)\n-        val adapter \u003d moshi.adapter\u003cList\u003cString\u003e\u003e(type)\n-        return adapter.toJson(value)\n-    }\n+    fun stringListToJson(value: List\u003cString\u003e?): String \u003d Gson().toJson(value)\n \n     @TypeConverter\n     fun jsonToListString(value: String): List\u003cString\u003e? {\n-        val moshi \u003d Moshi.Builder()\n-            .add(KotlinJsonAdapterFactory())\n-            .build()\n-        val type \u003d Types.newParameterizedType(List::class.java, String::class.java)\n-        val adapter \u003d moshi.adapter\u003cList\u003cString\u003e\u003e(type)\n-        return adapter.fromJson(value)\n+        val listType \u003d object : TypeToken\u003cList\u003cString\u003e\u003e() {}.type\n+        return Gson().fromJson(value, listType)\n     }\n \n     @TypeConverter\n-    fun intListToJson(value: List\u003cInt\u003e?): String {\n-        val moshi \u003d Moshi.Builder()\n-            .add(KotlinJsonAdapterFactory())\n-            .build()\n-        val type \u003d Types.newParameterizedType(List::class.java, Int::class.java)\n-        val adapter \u003d moshi.adapter\u003cList\u003cInt\u003e\u003e(type)\n-        return adapter.toJson(value)\n-    }\n+    fun intListToJson(value: List\u003cInt\u003e?): String \u003d Gson().toJson(value)\n \n     @TypeConverter\n     fun jsonToIntList(value: String): List\u003cInt\u003e? {\n-        val moshi \u003d Moshi.Builder()\n-            .add(KotlinJsonAdapterFactory())\n-            .build()\n-        val type \u003d Types.newParameterizedType(List::class.java, Int::class.java)\n-        val adapter \u003d moshi.adapter\u003cList\u003cInt\u003e\u003e(type)\n-        return adapter.fromJson(value)\n+        val listType \u003d object : TypeToken\u003cList\u003cInt\u003e\u003e() {}.type\n+        return Gson().fromJson(value, listType)\n     }\n }\n\\ No newline at end of file"},{"sha":"459ea48dc4ca0c0d0e892352fe7b473932019c7e","filename":"movies_provider/src/main/kotlin/io/jcal/movies_provider/repository/mapper/DataMapper.kt","status":"modified","additions":26,"changes":47,"patch":"@@ -32,23 +32,23 @@ class DataMapper @Inject constructor() {\n         val model \u003d MovieModel(\n             id \u003d response.id,\n             adult \u003d response.adult,\n-            backdropPath \u003d IMAGE_PATH.plus(response.backdropPath),\n+            backdropPath \u003d IMAGE_PATH.plus(emtpyString(response.backdropPath)),\n             budget \u003d response.budget,\n             genreIds \u003d response.genreIds,\n-            homepage \u003d response.homepage,\n-            imdbId \u003d response.imdbId,\n-            originalLanguage \u003d response.originalLanguage,\n-            originalTitle \u003d response.originalTitle,\n-            overview \u003d response.overview,\n+            homepage \u003d emtpyString(response.homepage),\n+            imdbId \u003d emtpyString(response.imdbId),\n+            originalLanguage \u003d emtpyString(response.originalLanguage),\n+            originalTitle \u003d emtpyString(response.originalTitle),\n+            overview \u003d emtpyString(response.overview),\n             popularity \u003d response.popularity,\n-            posterPath \u003d IMAGE_PATH.plus(response.posterPath),\n-            releaseDate \u003d response.releaseDate,\n+            posterPath \u003d IMAGE_PATH.plus(emtpyString(response.posterPath)),\n+            releaseDate \u003d emtpyString(response.releaseDate),\n             revenue \u003d response.revenue,\n             runtime \u003d response.runtime,\n-            spokenLanguageModels \u003d response.spokenLanguageModels.map { it.name },\n-            status \u003d response.status,\n-            tagline \u003d response.tagline,\n-            title \u003d response.title,\n+            //spokenLanguageModels \u003d response.spokenLanguageModels.map { it.name },\n+            status \u003d emtpyString(response.status),\n+            tagline \u003d emtpyString(response.tagline),\n+            title \u003d emtpyString(response.title),\n             video \u003d response.video,\n             voteAverage \u003d response.voteAverage,\n             voteCount \u003d response.voteCount\n@@ -90,7 +90,7 @@ class DataMapper @Inject constructor() {\n         return MovieEntity(\n             id \u003d model.id,\n             adult \u003d model.adult,\n-            backdropPath \u003d model.backdropPath.replace(IMAGE_PATH, EMPTY),\n+            backdropPath \u003d model.backdropPath.replace(IMAGE_PATH, EMPTY_STRING),\n             budget \u003d model.budget,\n             genreIds \u003d model.genreIds,\n             homepage \u003d model.homepage,\n@@ -99,7 +99,7 @@ class DataMapper @Inject constructor() {\n             originalTitle \u003d model.originalTitle,\n             overview \u003d model.overview,\n             popularity \u003d model.popularity,\n-            posterPath \u003d model.posterPath.replace(IMAGE_PATH, EMPTY),\n+            posterPath \u003d model.posterPath.replace(IMAGE_PATH, EMPTY_STRING),\n             releaseDate \u003d model.releaseDate,\n             revenue \u003d model.revenue,\n             runtime \u003d model.runtime,\n@@ -159,7 +159,7 @@ class DataMapper @Inject constructor() {\n             productionCode \u003d model.productionCode,\n             seasonNumber \u003d model.seasonNumber,\n             showId \u003d model.showId,\n-            stillPath \u003d model.stillPath.replace(IMAGE_PATH, EMPTY),\n+            stillPath \u003d model.stillPath.replace(IMAGE_PATH, EMPTY_STRING),\n             voteAverage \u003d model.voteAverage,\n             voteCount \u003d model.voteCount,\n             seasonId \u003d seasonId\n@@ -220,7 +220,7 @@ class DataMapper @Inject constructor() {\n             episodeCount \u003d model.episodeCount,\n             name \u003d model.name,\n             overview \u003d model.overview,\n-            posterPath \u003d model.posterPath.replace(IMAGE_PATH, EMPTY),\n+            posterPath \u003d model.posterPath.replace(IMAGE_PATH, EMPTY_STRING),\n             seasonNumber \u003d model.seasonNumber,\n             showId \u003d model.showId\n         )\n@@ -234,7 +234,7 @@ class DataMapper @Inject constructor() {\n                 episodeCount \u003d model.episodeCount,\n                 name \u003d model.name,\n                 overview \u003d model.overview,\n-                posterPath \u003d model.posterPath.replace(IMAGE_PATH, EMPTY),\n+                posterPath \u003d model.posterPath.replace(IMAGE_PATH, EMPTY_STRING),\n                 seasonNumber \u003d model.seasonNumber,\n                 showId \u003d model.showId\n             ),\n@@ -319,7 +319,7 @@ class DataMapper @Inject constructor() {\n                 airDate \u003d model.airDate,\n                 episodeCount \u003d model.episodeCount,\n                 seasonNumber \u003d model.seasonNumber,\n-                backdropPath \u003d model.backdropPath.replace(IMAGE_PATH, EMPTY),\n+                backdropPath \u003d model.backdropPath.replace(IMAGE_PATH, EMPTY_STRING),\n                 episodeRunTime \u003d model.episodeRunTime,\n                 firstAirDate \u003d model.firstAirDate,\n                 homepage \u003d model.homepage,\n@@ -336,7 +336,7 @@ class DataMapper @Inject constructor() {\n                 originalName \u003d model.originalName,\n                 overview \u003d model.overview,\n                 popularity \u003d model.popularity,\n-                posterPath \u003d model.posterPath.replace(IMAGE_PATH, EMPTY),\n+                posterPath \u003d model.posterPath.replace(IMAGE_PATH, EMPTY_STRING),\n                 status \u003d model.status,\n                 type \u003d model.type,\n                 voteAverage \u003d model.voteAverage,\n@@ -347,7 +347,8 @@ class DataMapper @Inject constructor() {\n         )\n     }\n \n-    fun convert(response: DatesDTO): DatesModel \u003d DatesModel(response.maximum, response.minimum)\n+    fun convert(response: DatesDTO?): DatesModel \u003d\n+        DatesModel(response?.maximum ?: \"\", response?.minimum ?: \"\")\n \n     fun convert(response: MoviesDTO): MoviesModel {\n         val model \u003d MoviesModel(\n@@ -416,8 +417,12 @@ class DataMapper @Inject constructor() {\n         return this\n     }\n \n+    fun emtpyString(string:String?):String \u003d if(string.isNullOrBlank()) \"\" else string\n+\n     companion object {\n-        private const val EMPTY \u003d \"\"\n+        private const val EMPTY_STRING \u003d \"\"\n+        private const val EMPTY_INT \u003d 0\n+        private const val EMPTY_DOUBLE \u003d 0.0\n         private const val IMAGE_PATH \u003d \"https://image.tmdb.org/t/p/original\"\n     }\n }\n\\ No newline at end of file"}]}